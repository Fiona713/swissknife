// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// calcAndCountDist
NumericVector calcAndCountDist(std::vector<int> query, std::vector<int> reference, NumericVector cnt);
RcppExport SEXP _swissknife_calcAndCountDist(SEXP querySEXP, SEXP referenceSEXP, SEXP cntSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<int> >::type query(querySEXP);
    Rcpp::traits::input_parameter< std::vector<int> >::type reference(referenceSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type cnt(cntSEXP);
    rcpp_result_gen = Rcpp::wrap(calcAndCountDist(query, reference, cnt));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_swissknife_calcAndCountDist", (DL_FUNC) &_swissknife_calcAndCountDist, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_swissknife(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
