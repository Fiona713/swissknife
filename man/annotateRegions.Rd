% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/annotateRegions.R
\name{annotateRegions}
\alias{annotateRegions}
\title{Annotate regions.}
\usage{
annotateRegions(
  x,
  hasOverlap = list(),
  fracOverlap = list(),
  numOverlap = list(),
  nearest = list(),
  ignore.strand = TRUE
)
}
\arguments{
\item{x}{The \code{\link[GenomicRanges]{GRanges}} object to annotate.}

\item{hasOverlap}{Named \code{list} with \code{\link[GenomicRanges]{GRanges}}
or \code{\link[GenomicRanges]{GRangesList}} object(s).
For each list element, a logical vector "X.hasOverlap" will be added to the
\code{mcols} of the result, with \code{TRUE} for each tile that overlaps
any region in that element. "X" is obtained from \code{names(hasOverlap)}.}

\item{fracOverlap}{Named \code{list} with \code{\link[GenomicRanges]{GRanges}}
or \code{\link[GenomicRanges]{GRangesList}} object(s).
For each list element, a numeric vector "X.fracOverlap" will be added to the
\code{mcols} of the result, with a value between 0 and 1 giving the fraction
of bases in a tile that overlaps with any region in that element. "X" is
obtained from \code{names(fracOverlap)}.}

\item{numOverlap}{Named \code{list} with \code{\link[GenomicRanges]{GRanges}}
or \code{\link[GenomicRanges]{GRangesList}} object(s).
For each list element, two numeric vectors "X.numOverlapWithin" and
"X.numOverlapAny" will be added to the \code{mcols} of the result, giving
the number of ranges in that element that are fully contained within
a tile, or that overlap with a tile in any way, respectively. "X" is
obtained from \code{names(numOverlap)}.}

\item{nearest}{Named \code{list} with \code{\link[GenomicRanges]{GRanges}}
or \code{\link[GenomicRanges]{GRangesList}} object(s).
For each list element, two numeric vectors "X.nearestName" and
"X.nearestDistance" will be added to the \code{mcols} of the result, giving
the name and distance of the nearest range in that element for each tile. "X" is
obtained from \code{names(nearest)}, and the values of "X.nearestName" from
\code{names(nearest$X)}. If multiple nearest ranges are at the same
distance from a tile, an arbitrary one is reported in "X.nearestName".}

\item{ignore.strand}{Logical scalar passed to
\code{\link[GenomicRanges]{findOverlaps}} when searching for overlaps
between \code{x} and reference regions.}
}
\value{
A \code{\link[GenomicRanges]{GRanges}} similar to \code{x}, with
    annotations added to its metadata columns (\code{mcols}).
}
\description{
Annotate a \code{\link[GenomicRanges]{GRanges}} object with
    sets of reference \code{\link[GenomicRanges]{GRanges}} or
    \code{\link[GenomicRanges]{GRangesList}} objects, with
    respect to overlaps and nearest neighbors.
}
\examples{
library(GenomicRanges)

x <- GRanges("chr1", IRanges(c(1, 12), width = 10))
tss <- GRanges("chr1", IRanges(c(1, 10, 30), width = 1,
                               names = paste0("t", 1:3)))
blacklist <- GRanges("chr1", IRanges(20, width = 5))
annotateRegions(x, hasOverlap = list(Blacklist = blacklist),
                fracOverlap = list(Blacklist = blacklist),
                numOverlap = list(TSS = tss),
                nearest = list(TSS = tss))

}
\seealso{
\code{\link{getGenomicTiles}} that uses this function,
    \code{\link[GenomicRanges]{findOverlaps}} and
    \code{\link[GenomicRanges]{nearest}} in package \pkg{GenomicRanges} used
    internally.
}
\author{
Michael Stadler
}
